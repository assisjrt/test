pipeline {
    agent { label "jenkins-agent" }

    stages {
        stage('Information') {
            steps {
                echo env.BRANCH_NAME
                echo env.TAG_NAME
            }
        }

        stage('SAST') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME ==~ /^(main|staging|develop)$/ }
                    expression { env.TAG_NAME ==~ /^(v\d+\.\d+\.\d+$|v\d+\.\d+\.\d+-staging$)/ }
                }
            }

            stages {
                stage('gosec') {
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            container('gosec') {
                                sh """
                                    mkdir -p ./build/test-reports
                                    gosec -r -fmt junit-xml -out ./build/test-reports/gosec-report.xml .
                                """
                            }
                        }
                    }
                }

                post {
                    always {
                        junit testResults: '**/build/test-reports/*.xml', allowEmptyResults: false
                    }
                }
            }

            stages {
                stage('bandit') {
                    step {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            container('bandit') {
                                sh """
                                    mkdir -p ./build/test-reports
                                    bandit --format=xml --recursive --output=./build/test-reports/bandit-report.xml .
                                """
                            }
                        }
                    }
                }

                post {
                    always {
                        junit testResults: '**/build/test-reports/*.xml', allowEmptyResults: false
                    }
                }
            }

            // stages {
            //     stage('flake8') {
            //         step {
            //             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            //                 container('flake8') {
            //                     sh """
            //                         mkdir -p ./build/test-reports
            //                         flake8 --format=default --output-file=./build/test-reports/flake8-report.txt
            //                     """
            //                 }
            //             }
            //         }
            //     }

            //     post {
            //         always {
            //             sh 'flake8_junit /build/test-reports/flake8-report.txt ./build/test-reports/flake8-report.xml'
            //             junit testResults: '**/build/test-reports/*.xml', allowEmptyResults: false
            //         }
            //     }
            // }
        }

        stage('Build') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME ==~ /^(main|staging|develop)$/ }
                    expression { env.TAG_NAME ==~ /^(v\d+\.\d+\.\d+$|v\d+\.\d+\.\d+-staging$)/ }
                }
            }

            steps {
                echo "Building.."
            }
        }

        stage('Test') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME ==~ /^(main|staging|develop)$/ }
                    expression { env.TAG_NAME ==~ /^(v\d+\.\d+\.\d+$|v\d+\.\d+\.\d+-staging$)/ }
                }
            }

            steps {
                echo "Testing..."
            }
        }

        stage('Deploy') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME ==~ /^(main|staging|develop)$/ }
                    expression { env.TAG_NAME ==~ /^(v\d+\.\d+\.\d+$|v\d+\.\d+\.\d+-staging$)/ }
                }
            }

            steps {
                echo "Deploying...."
            }
        }
    }
}
