pipeline {
    agent any

    stages {
        stage('SAST') {
            when {
                anyOf {
                    branch 'main';
                    branch 'staging';
                    branch 'develop';
                    tag pattern: "^v\d+\.\d+\.\d+$", comparator: "REGEXP";
                    tag pattern: "^v\d+\.\d+\.\d+-staging$", comparator: "REGEXP";
                }
            }

            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    echo "SAST..."
                    container('gosec') {
                        sh """
                            mkdir -p ./build/test-reports
                            gosec -r -fmt junit-xml -out ./build/test-reports/gosec-report.xml .
                        """
                    }
                }
            }

            post {
                always {
                    junit testResults: '**/build/test-reports/*.xml', allowEmptyResults: false
                }
            }
        }

        stage('Build') {
            steps {
                echo "Building.."
            }
        }

        stage('Test') {
            steps {
                echo "Testing..."
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying...."
            }
        }
    }
}
